{"version":3,"file":"static/js/766.4dd7d2a6.chunk.js","mappings":"4TAEMA,EAAG,mCACHC,EAAM,gCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,IAAAA,IAAA,UAChBF,EADgB,sCACiBD,IAHzC,cAEOI,EAFP,yBAKQA,GALR,gCAOCC,QAAQC,MAAR,MAPD,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEwBL,IAAAA,IAAA,UAChBF,EADgB,iBACJO,EADI,oBACUR,EADV,oBAFxB,cAEOI,EAFP,yBAKQA,GALR,gCAOCC,QAAQC,MAAR,MAPD,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEwBL,IAAAA,IAAA,UAChBF,EADgB,iBACJO,EADI,4BACkBR,EADlB,2BAFxB,cAEOI,EAFP,yBAKQA,GALR,gCAOCC,QAAQC,MAAR,MAPD,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEwBL,IAAAA,IAAA,UAChBF,EADgB,iBACJO,EADI,4BACkBR,EADlB,2BAFxB,cAEOI,EAFP,yBAKQA,GALR,gCAOCC,QAAQC,MAAR,MAPD,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,oGAEwBT,IAAAA,IAAA,UAChBF,EADgB,gCACWD,EADX,iCACuCY,EADvC,gCAFxB,cAEOR,EAFP,OAKOS,EAAOT,EAASS,KAChBC,EAAUD,EAAKC,QANtB,kBAOQA,GAPR,gCASCT,QAAQC,MAAR,MATD,kF,mIC/CMS,EAAWC,EAAAA,GAAAA,GAAH,mOAURC,EAAWD,EAAAA,GAAAA,GAAH,yJ,mBCLN,SAASE,IACpB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACNd,EAAAA,EAAAA,IAAaS,GACZM,MAAK,SAAArB,GAAQ,OAAIA,EAASS,QAC1BY,MAAK,SAAArB,GACFmB,EAASnB,EAASsB,WAEvB,CAACP,KAGA,+BAEQ,SAACJ,EAAD,UACKO,EAAMK,KAAI,SAAAC,GAAK,OACZ,UAACX,EAAD,YACI,gBACAY,IACID,EAAME,aAAN,UAjBX,mCAiBW,OACgBF,EAAME,cACpBC,EAENC,IAAKJ,EAAMK,KACXC,MAAM,SAEN,uBAAIN,EAAMK,QACV,uCAAeL,EAAMO,eAXVP,EAAMpB,a","sources":["Api/Api.js","pages/Cast/CastStyles.js","pages/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst key = `b0ded52037f68ea6d2f9a8275209b0c4`;\nconst url = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n    try{\n        const response = await axios.get(\n            `${url}trending/movie/day?api_key=${key}`\n        );\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getMovieId(id) {\n    try {\n        const response = await axios.get(\n            `${url}movie/${id}?api_key=${key}&language=en-US`\n        );\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getMovieReview(id) {\n    try {\n        const response = await axios.get(\n            `${url}movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n        );\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getMovieCast(id) {\n    try {\n        const response = await axios.get(\n            `${url}movie/${id}/credits?api_key=${key}&language=en-US&page=1`\n        );\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getMovieByQuery(query) {\n    try {\n        const response = await axios.get(\n            `${url}search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`\n        );\n        const data = response.data;\n        const results = data.results;\n        return results;\n    } catch (error) {\n        console.error(error);\n    }\n}","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: grid;\n  place-items: center;\n  padding-top: 20px;\n  grid-template-rows: repeat(1, 1fr);\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  gap: 12px;\n`;\n\nexport const ListItem = styled.li`\n  width: 160px;\n  height: 100%;\n  text-align: center;\n  border: 1px solid grey;\n  border-radius: 10px;\n  overflow: hidden;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCast } from 'Api/Api';\nimport { CastList, ListItem } from './CastStyles';\nimport noImage from '../../images/no-image.png';\n\n\nexport default function Cast() {\n    const { moviesId } = useParams();\n    const [movie, setMovie] = useState([]);\n    const actorImg = 'https://image.tmdb.org/t/p/w300';\n    useEffect(() => {\n        getMovieCast(moviesId)\n        .then(response => response.data)\n        .then(response => {\n            setMovie(response.cast);\n        });\n    }, [moviesId]);\n\n    return (\n        <>\n            {\n                <CastList>\n                    {movie.map(actor => (\n                        <ListItem key={actor.id}>\n                            <img\n                            src={\n                                actor.profile_path\n                                ? `${actorImg}${actor.profile_path}`\n                                : noImage\n                            }\n                            alt={actor.name}\n                            width=\"100\"\n                            />\n                            <p>{actor.name}</p>\n                            <p>Character: {actor.character}</p>\n                        </ListItem>\n                    ))}\n                </CastList>\n            }\n        </>\n    );\n}"],"names":["key","url","getTrendingMovies","axios","response","console","error","getMovieId","id","getMovieReview","getMovieCast","getMovieByQuery","query","data","results","CastList","styled","ListItem","Cast","moviesId","useParams","useState","movie","setMovie","useEffect","then","cast","map","actor","src","profile_path","noImage","alt","name","width","character"],"sourceRoot":""}