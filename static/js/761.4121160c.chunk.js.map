{"version":3,"file":"static/js/761.4121160c.chunk.js","mappings":"sTAEMA,EAAG,mCACHC,EAAM,gCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,IAAAA,IAAA,UAChBF,EADgB,sCACiBD,IAHzC,cAEOI,EAFP,yBAKQA,GALR,gCAOCC,QAAQC,MAAR,MAPD,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEwBL,IAAAA,IAAA,UAChBF,EADgB,iBACJO,EADI,oBACUR,EADV,oBAFxB,cAEOI,EAFP,yBAKQA,GALR,gCAOCC,QAAQC,MAAR,MAPD,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEwBL,IAAAA,IAAA,UAChBF,EADgB,iBACJO,EADI,4BACkBR,EADlB,2BAFxB,cAEOI,EAFP,yBAKQA,GALR,gCAOCC,QAAQC,MAAR,MAPD,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,gGAEwBL,IAAAA,IAAA,UAChBF,EADgB,iBACJO,EADI,4BACkBR,EADlB,2BAFxB,cAEOI,EAFP,yBAKQA,GALR,gCAOCC,QAAQC,MAAR,MAPD,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,oGAEwBT,IAAAA,IAAA,UAChBF,EADgB,gCACWD,EADX,iCACuCY,EADvC,gCAFxB,cAEOR,EAFP,OAKOS,EAAOT,EAASS,KAChBC,EAAUD,EAAKC,QANtB,kBAOQA,GAPR,gCASCT,QAAQC,MAAR,MATD,kF,sHC7CQ,SAASS,IACpB,IAAQC,EAAaC,EAAAA,GAAAA,SACrB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAW,YACPZ,EAAAA,EAAAA,IAAeO,GACdM,MAAK,SAAAlB,GAAQ,OAAIA,EAASS,QAC1BS,MAAK,SAAAlB,GACFgB,EAAShB,EAASU,cAEvB,CAACE,KAGA,8BACKG,EAAMI,OAAS,EACZJ,EAAMK,KAAI,SAAAC,GAAM,OACZ,4BACI,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFLF,EAAOjB,QAMrB","sources":["Api/Api.js","pages/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst key = `b0ded52037f68ea6d2f9a8275209b0c4`;\nconst url = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n    try{\n        const response = await axios.get(\n            `${url}trending/movie/day?api_key=${key}`\n        );\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getMovieId(id) {\n    try {\n        const response = await axios.get(\n            `${url}movie/${id}?api_key=${key}&language=en-US`\n        );\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getMovieReview(id) {\n    try {\n        const response = await axios.get(\n            `${url}movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n        );\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getMovieCast(id) {\n    try {\n        const response = await axios.get(\n            `${url}movie/${id}/credits?api_key=${key}&language=en-US&page=1`\n        );\n        return response;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function getMovieByQuery(query) {\n    try {\n        const response = await axios.get(\n            `${url}search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`\n        );\n        const data = response.data;\n        const results = data.results;\n        return results;\n    } catch (error) {\n        console.error(error);\n    }\n}","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {getMovieReview } from 'Api/Api';\n\nexport default function Reviews() {\n    const { moviesId } = useParams;\n    const [movie, setMovie] = useState([]);\n\n    useEffect (() => {\n        getMovieReview(moviesId)\n        .then(response => response.data)\n        .then(response => {\n            setMovie(response.results);\n        })\n    }, [moviesId]);\n\n    return (\n        <>\n            {movie.length > 0 ? (\n                movie.map(review => (\n                    <div key={review.id}>\n                        <h3>{review.author}</h3>\n                        <p>{review.content}</p>\n                    </div>\n                ))\n            ) : (\n                <p>No Reviews</p>\n            \n            )}\n        </>\n    );\n}"],"names":["key","url","getTrendingMovies","axios","response","console","error","getMovieId","id","getMovieReview","getMovieCast","getMovieByQuery","query","data","results","Reviews","moviesId","useParams","useState","movie","setMovie","useEffect","then","length","map","review","author","content"],"sourceRoot":""}